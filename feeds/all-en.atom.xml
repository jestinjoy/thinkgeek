<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Think Geek</title><link href="http://blog.jestinjoy.info/" rel="alternate"></link><link href="http://blog.jestinjoy.info/feeds/all-en.atom.xml" rel="self"></link><id>http://blog.jestinjoy.info/</id><updated>2015-10-09T17:28:00+05:30</updated><entry><title>How to run MaltParser with NLTK under GNU/Linux</title><link href="http://blog.jestinjoy.info/how-to-run-maltparser-with-nltk-under-gnulinux.html" rel="alternate"></link><updated>2015-10-09T17:28:00+05:30</updated><author><name>Jestin Joy</name></author><id>tag:blog.jestinjoy.info,2015-10-09:how-to-run-maltparser-with-nltk-under-gnulinux.html</id><summary type="html">&lt;p&gt;Thanks to this Stackoverflow post, I could get MaltParser get running with NLTK under Linux.&lt;/p&gt;
&lt;p&gt;The first thing you need to do is to upgrade NLTK to the latest version since, previous versions had a bug that prevented it from running MaltParser. NLTK can be upgraded with the command&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;pip install &lt;span class="pre"&gt;-U&lt;/span&gt; nltk&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Next step is to &lt;a class="reference external" href="http://www.maltparser.org/download.html"&gt;download MaltParser&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;a class="reference external" href="http://www.maltparser.org/mco/english_parser/engmalt.poly-1.7.mco"&gt;pre trained mco file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thats it.&lt;/p&gt;
&lt;p&gt;The following programs explains the working.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nltk.parse.malt&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MaltParser&lt;/span&gt;
&lt;span class="n"&gt;mp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MaltParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/other/apps/maltparser-1.8.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;engmalt.poly-1.7.mco&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sent1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;What is your name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sent1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the function MaltParser the arguments are the path to the downloaded MaltParser and the download mco file.&lt;/p&gt;
&lt;p&gt;This will give you the output&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;(is What (name your))&lt;/tt&gt;&lt;/p&gt;
</summary><category term="free_software"></category><category term="nlp"></category><category term="linux"></category><category term="nltk"></category><category term="parser"></category></entry><entry><title>Setting a theme in Pelican</title><link href="http://blog.jestinjoy.info/setting-a-theme-in-pelican.html" rel="alternate"></link><updated>2015-07-31T13:01:00+05:30</updated><author><name>Jestin Joy</name></author><id>tag:blog.jestinjoy.info,2015-07-31:setting-a-theme-in-pelican.html</id><summary type="html">&lt;p&gt;This explains how to set a new theme for your blog. Pelican comes with a command called &lt;em&gt;pelican-themes&lt;/em&gt;. Current themes can be listed with the command&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pelican-themes&lt;/span&gt; &lt;span class="pre"&gt;-l&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;New theme can be installed with the command&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pelican-themes&lt;/span&gt; &lt;span class="pre"&gt;--install&lt;/span&gt; &lt;span class="pre"&gt;~/pelican-themes/bootstrap2&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;~/pelican-themes/bootstrap2&lt;/em&gt; represents the downloaded theme. Themes can be downloaded from the &lt;a class="reference external" href="https://github.com/getpelican/pelican-themes"&gt;pelican theme Github&lt;/a&gt;.&lt;/p&gt;
</summary><category term="pelican"></category><category term="blog"></category></entry><entry><title>How to run Stanford NLP</title><link href="http://blog.jestinjoy.info/how-to-run-stanford-nlp.html" rel="alternate"></link><updated>2015-07-30T17:28:00+05:30</updated><author><name>Jestin Joy</name></author><id>tag:blog.jestinjoy.info,2015-07-30:how-to-run-stanford-nlp.html</id><summary type="html">&lt;p&gt;This article gives information about how to get Stanfor NLP rnn package up and running. Stanford nlp can be downloaded from &lt;a class="reference external" href="https://github.com/stanfordnlp/CoreNLP"&gt;Stanford CoreNLP Github site&lt;/a&gt;. Make sure you have &lt;a class="reference external" href="http://www.oracle.com/technetwork/java/javase/downloads/index.html"&gt;latest Java&lt;/a&gt; installed.&lt;/p&gt;
&lt;p&gt;Next step is to build the package. Use the following command.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;ant&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Run the rnn package by moving into classes directory and run&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;$ java &lt;span class="pre"&gt;-mx4g&lt;/span&gt; edu.stanford.nlp.parser.dvparser.DVParser&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;More information about training and other details cane be have from &lt;a class="reference external" href="http://nlp.stanford.edu/software/parser-faq.shtml#rnn"&gt;Stanford NLP site&lt;/a&gt;&lt;/p&gt;
</summary><category term="free_software"></category><category term="nlp"></category><category term="linux"></category></entry><entry><title>Introduction to computing and problem solving using Python</title><link href="http://blog.jestinjoy.info/introduction-to-computing-and-problem-solving-using-python.html" rel="alternate"></link><updated>2015-06-19T17:28:00+05:30</updated><author><name>Jestin Joy</name></author><id>tag:blog.jestinjoy.info,2015-06-19:introduction-to-computing-and-problem-solving-using-python.html</id><summary type="html">&lt;p&gt;Taking a cue from MIT,  Kerala Technological University has plans for teaching Python as an introductory course for BTech Computer Science students. The first draft published has topics&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;variables, expressions and statements, evaluation of expressions, precedence, string operations.
Control statements, Boolean expressions and logical operators, conditional and alternative executions.
Iteration - while statement and tables.&lt;/p&gt;
&lt;p&gt;Functions, calling functions, type conversion and coercion, composition of functions, mathematical functions, user-defined functions, parameters and arguments.&lt;/p&gt;
&lt;p&gt;Strings and lists – string traversal and comparison with examples. tuples and dictionaries – operations and examples&lt;/p&gt;
&lt;p&gt;Files and exceptions - text files, directories.
Introduction to classes and objects - attributes, instances&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;So thought of creating a tutorial based on this. It can be accessed from &lt;a class="reference external" href="http://nbviewer.ipython.org/gist/jestinjoy/15855fb63c6285eb54ef"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nbviewer.ipython.org/gist/jestinjoy/15855fb63c6285eb54ef"&gt;Python KTU Syllabus Notebook&lt;/a&gt;.&lt;/p&gt;
</summary><category term="free_software"></category><category term="python"></category><category term="education"></category></entry><entry><title>Debian Jessie: First Look</title><link href="http://blog.jestinjoy.info/debian-jessie-first-look.html" rel="alternate"></link><updated>2015-04-28T17:28:00+05:30</updated><author><name>Jestin Joy</name></author><id>tag:blog.jestinjoy.info,2015-04-28:debian-jessie-first-look.html</id><summary type="html">&lt;p&gt;Much awaited Debian 8.0 aka Jessie was released on April 25, 2015. It comes with 5 year promised support from Debian community (upto April/May 2020). Debian 7 &amp;quot;Wheezy&amp;quot; support ends on May 2018. Debian ships with systemd which makes systemd the process id 1 instead of init. Major updatded packages include&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Linux 3.16.7&lt;/li&gt;
&lt;li&gt;GNOME 3.14&lt;/li&gt;
&lt;li&gt;GCC 4.9.2&lt;/li&gt;
&lt;li&gt;LibreOffice 4.3.3&lt;/li&gt;
&lt;li&gt;Iceweasel 31.6.0esr&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="upgrading"&gt;
&lt;h2&gt;Upgrading&lt;/h2&gt;
&lt;p&gt;For upgrading, after adding jessie repos, type in terminal&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; &lt;span class="pre"&gt;dist-upgrade&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;dist-upgrade in addition to performing the function of upgrade, also intelligently handles changing dependencies with new versions of packages&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Its better to do this from the command line by pressing &lt;strong&gt;alt-ctrl-f1&lt;/strong&gt; and switching to &lt;strong&gt;root&lt;/strong&gt; user. When I did &lt;em&gt;dist-upgrade&lt;/em&gt; from GUI, I couldnt unlock the lock screen during upgradation.&lt;/p&gt;
&lt;p&gt;Debian Jessie sources.list can be have from &lt;a class="reference external" href="https://wiki.debian.org/SourcesList"&gt;Debian site&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="GNOME" class="align-center" src="pictures/gnome.jpg" /&gt;
&lt;img alt="GNOME" class="align-center" src="pictures/gnome1.jpg" /&gt;
&lt;img alt="GNOME" class="align-center" src="pictures/systemd.jpg" /&gt;
&lt;/div&gt;
</summary><category term="free_software"></category><category term="debian"></category><category term="linux"></category></entry><entry><title>How easy it is to organize a Free Software Conference</title><link href="http://blog.jestinjoy.info/how-easy-it-is-to-organize-a-free-software-conference.html" rel="alternate"></link><updated>2014-07-27T17:28:00+05:30</updated><author><name>Jestin Joy</name></author><id>tag:blog.jestinjoy.info,2014-07-27:how-easy-it-is-to-organize-a-free-software-conference.html</id><summary type="html">&lt;p&gt;In India undergraduate academic conferences are conducted regularly by colleges/universities to show their expertise and for publicity purposes. The challenges faced by the  organization range from selecting speakers to arranging audience. Most technical conference in undergraduate streams are just programs consisting mainly of cultural and fun events.  If the task is to conduct a Free Software Academic conference then it is more challenging. It involves&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Selecting speakers from Free Software Stream&lt;/li&gt;
&lt;li&gt;Convince authorities to conduct a Free Software Conference&lt;/li&gt;
&lt;li&gt;Getting audience to attend the event&lt;/li&gt;
&lt;li&gt;Using only Free Software for organizing and other purposes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;First problem we faced was whether or not to involve technologies from Google and Mozilla. With Free Software Foundation strongly against Google products, especially Android;  we decided not to go for the Android Workshop, one of the most popular and easy to organize tech workshop conducted in our part of the world. With Mozilla in its earlier stage of development and its intentions not clear we have decided not to go for that also. Anyway we could solve the first three points easily, since my task was to conduct the program in its third edition. I am talking about &lt;a class="reference external" href="http://icefoss.fisat.ac.in/"&gt;ICEFOSS&lt;/a&gt; , a Free Software Conference conducted by Federal Institute of Science And Technology. Here I will be writing about the Free Softwares we used and how we tried our maximum to stick to the Free Software ideology.&lt;/p&gt;
&lt;div class="section" id="brochure-poster"&gt;
&lt;h2&gt;Brochure, Poster…..&lt;/h2&gt;
&lt;p&gt;First task was to create a brochure. There are lots of tools available. We had already created some using LaTeX. This time we went for Gimp. Next task was to create poster, and used Inkscape for that purpose. Inkscape being a vector graphics editor proved very helpful. Since it uses geometrical primitives, to represent images the quality remains same even though we try to enlarge it. When creating brochure using Gimp we faced the problem of quality. For invitation we used LaTeX.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="web-site"&gt;
&lt;h2&gt;Web Site&lt;/h2&gt;
&lt;p&gt;Major criticism we face usually is of about server and site templates. This time we took extra care to create the site using Free Software tools. So we went for Bootstrap,which is licensed under the Apache 2.0 license.  Also the all the images used in the site are under public domain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conference-presentation"&gt;
&lt;h2&gt;Conference Presentation&lt;/h2&gt;
&lt;p&gt;We provided laptops loaded with Debian for speakers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="certificate"&gt;
&lt;h2&gt;Certificate&lt;/h2&gt;
&lt;p&gt;Certificate is made using LaTeX template available.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="free_software"></category><category term="conference"></category></entry><entry><title>Blogging with Pelican</title><link href="http://blog.jestinjoy.info/blogging-with-pelican.html" rel="alternate"></link><updated>2014-01-18T14:28:00+05:30</updated><author><name>Jestin Joy</name></author><id>tag:blog.jestinjoy.info,2014-01-18:blogging-with-pelican.html</id><summary type="html">&lt;p&gt;After a brief stop, decided to continue with blogging again with pelican.&lt;/p&gt;
&lt;p&gt;This is how to do it.&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Create an account in &lt;a class="reference external" href="http://pages.github.com/"&gt;Github&lt;/a&gt; pages. Just create the repo. Don't follow the other steps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Install pelican. I have used pip.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip install pelican
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Use the pelican-quickstart command to insert default settings. This will ask for some questions. Answer them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Edit the contents of pelicanconf.py to add some more contents&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Use the make file to push the contents to Github.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
make github
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="pelican"></category><category term="blog"></category></entry></feed>